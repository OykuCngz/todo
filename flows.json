[{"id":"2ff629767b586cfe","type":"tab","label":"Flow 1","disabled":false,"info":"","env":[]},{"id":"tab1","type":"tab","label":"todos","disabled":false,"info":""},{"id":"tabFav","type":"tab","label":"favicon","disabled":false},{"id":"6276be3bae445313","type":"http in","z":"2ff629767b586cfe","name":"","url":"/","method":"get","upload":false,"skipBodyParsing":false,"swaggerDoc":"","x":90,"y":100,"wires":[["74f99efc2b23cadf"]]},{"id":"fc64863bb139683c","type":"http response","z":"2ff629767b586cfe","name":"","statusCode":"","headers":{},"x":450,"y":100,"wires":[]},{"id":"74f99efc2b23cadf","type":"template","z":"2ff629767b586cfe","name":"","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!doctype html>\n<html lang=\"tr\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n  <title>Yapılacaklar Listesi</title>\n  <link rel=\"stylesheet\" href=\"/vendor/bootstrap/bootstrap.min.css\"><link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"/favicon.svg\">\n  <style>\n    .truncate{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}\n    .table-fixed{table-layout:fixed}\n    .tr-done { color:#6c757d; text-decoration: line-through; }\n    .btn-group.btn-group-sm .btn { padding-inline: .5rem; } /* ikonlara daha ferah tıklama alanı */\n  </style>\n</head>\n<body>\n  <div class=\"container py-4\">\n    <!-- ÜST: giriş + butonlar -->\n    <div class=\"row mb-3\">\n      <div class=\"col-md-8 offset-md-2\">\n        <div class=\"input-group input-group-lg\">\n          <input id=\"newTitle\" type=\"text\" class=\"form-control\" placeholder=\"Yoğurt al... Ekmek al...\" aria-label=\"Yeni iş\">\n          <button id=\"btnClear\" class=\"btn btn-outline-secondary\" type=\"button\">Temizle</button>\n          <button id=\"btnAdd\" class=\"btn btn-primary\" type=\"button\">Ekle</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- LİSTE KUTUSU -->\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\">\n        <div class=\"border rounded-3 shadow-sm overflow-hidden\">\n          <div class=\"bg-dark text-white fw-bold px-3 py-2\">İş</div>\n\n          <div class=\"table-responsive\">\n            <table class=\"table table-hover m-0 table-fixed\">\n              <!-- Kolon genişliklerini sabitle -->\n              <colgroup>\n                <col style=\"width:70%\">\n                <col style=\"width:30%\">\n              </colgroup>\n              <!-- Görünmeyen thead: tarayıcıya 2 kolon olduğunu bildirir -->\n              <thead class=\"visually-hidden\">\n                <tr><th>İş</th><th>İşlem</th></tr>\n              </thead>\n              <tbody id=\"todoBody\">\n                <tr><td colspan=\"2\" class=\"text-center text-muted\">Henüz kayıt yok</td></tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Düzenle Modal -->\n  <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content border-0 shadow-lg\">\n        <div class=\"modal-header bg-primary text-white\">\n          <h5 class=\"modal-title\">\n            <i class=\"bi bi-pencil-square me-2\"></i>Görevi Düzenle\n          </h5>\n          <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\" aria-label=\"Kapat\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <label for=\"editInput\" class=\"form-label\">Yeni başlık</label>\n          <input id=\"editInput\" type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Başlık...\">\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">İptal</button>\n          <button id=\"editSaveBtn\" type=\"button\" class=\"btn btn-primary\">\n            <i class=\"bi bi-check2 me-1\"></i>Kaydet\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <script src=\"/vendor/bootstrap/bootstrap.bundle.min.js\"></script>\n  <script>\n    const $ = (s,r=document)=>r.querySelector(s);\n    const esc = s => String(s ?? '').replace(/[&<>\"']/g, m => ({'&':'&amp;','<':'&lt;','>':'&gt;','\"':'&quot;',\"'\":'&#39;'}[m]));\n    const api = '/todos';\n    const bodyEl = $('#todoBody');\n  \n    // ✅ completed alanını güvenli yorumla (true/'true'/1/'1')\n    function isDone(t){\n      const v = t?.completed;\n      return v === true || v === 'true' || v === 1 || v === '1';\n    }\n  \n    // ✅ listeyi hep taze çek (cache kapalı)\n    async function load() {\n    // her seferinde taze ver (cache kapalı + cache buster)\n    const r = await fetch('/todos?ts=' + Date.now(), { cache: 'no-store' });\n    render(await r.json());\n    }\n    \n    function render(list){\n    if(!list.length){\n    bodyEl.innerHTML = `<tr>\n      <td colspan=\"2\" class=\"text-center text-muted\">Henüz kayıt yok</td>\n    </tr>`;\n    return;\n    }\n    \n    bodyEl.innerHTML = list.map(t=>{\n    const title = esc((t.title ?? t.text ?? t.name ?? '').toString());\n    const done = isDone(t);\n    \n    const btns = done\n    ? `<div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button type=\"button\" class=\"btn btn-warning\" data-act=\"open\"\n                       aria-label=\"Aç\" data-bs-toggle=\"tooltip\" title=\"Aç\">\n                 <i class=\"bi bi-arrow-counterclockwise\"></i>\n               </button>\n      <button type=\"button\" class=\"btn btn-danger\" data-act=\"del\"\n                       aria-label=\"Sil\" data-bs-toggle=\"tooltip\" title=\"Sil\">\n                 <i class=\"bi bi-trash\"></i>\n               </button>\n    </div>`\n    : `<div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button type=\"button\" class=\"btn btn-info text-white\" data-act=\"edit\"\n                       aria-label=\"Düzenle\" data-bs-toggle=\"tooltip\" title=\"Düzenle\">\n                 <i class=\"bi bi-pencil-square\"></i>\n               </button>\n      <button type=\"button\" class=\"btn btn-secondary\" data-act=\"remind\"\n                       aria-label=\"Hatırlatıcı\" data-bs-toggle=\"tooltip\" title=\"Hatırlatıcı\">\n                 <i class=\"bi bi-bell\"></i>\n               </button>\n      <button type=\"button\" class=\"btn btn-success\" data-act=\"done\"\n                       aria-label=\"Tamamla\" data-bs-toggle=\"tooltip\" title=\"Tamamla\">\n                 <i class=\"bi bi-check2\"></i>\n               </button>\n      <button type=\"button\" class=\"btn btn-danger\" data-act=\"del\"\n                       aria-label=\"Sil\" data-bs-toggle=\"tooltip\" title=\"Sil\">\n                 <i class=\"bi bi-trash\"></i>\n               </button>\n    </div>`;\n    \n    // 👇 ÖNEMLİ: map içinde satırı return et\n    return `\n    <tr data-id=\"${t._id}\" class=\"${done ? 'tr-done' : ''}\">\n      <td class=\"truncate\" title=\"${title}\">${title || '<i class=\"text-muted\">başlık yok</i>'}</td>\n      <td class=\"text-end\">${btns}</td>\n    </tr>`;\n    }).join('');\n\n    document.querySelectorAll('.tooltip').forEach(el => el.remove());\n    // Tooltip'leri her render'dan sonra yeniden başlat\n    document.querySelectorAll('[data-bs-toggle=\"tooltip\"]').forEach(el => {\n  try { bootstrap.Tooltip.getInstance(el)?.dispose(); } catch {}\n  bootstrap.Tooltip.getOrCreateInstance(el, {\n    container: 'body',\n    placement: 'bottom',\n    trigger: 'hover',  \n    boundary: 'window'\n  });\n    });\n    }\n    \n    async function add(title){\n      if(!title.trim()) return;\n      await fetch(api,{\n        method:'POST',\n        headers:{'Content-Type':'application/json'},\n        body: JSON.stringify({ title:title.trim() })\n      });\n      $('#newTitle').value=''; load();\n    }\n  \n    async function del(id){\n      await fetch(`${api}/${id}`,{method:'DELETE'});\n      load();\n    }\n  \n    // ✅ PUT sonrası anında taze liste\n    async function toggle(id, to) {\n    const res = await fetch(`/todos/${id}`, {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ completed: !!to })\n    });\n    if (res.ok) {\n    await load(); // anında taze liste\n    } else {\n    alert('Güncellenemedi: ' + res.status);\n    }\n    }\n  \n    // Şık Düzenle penceresi – Bootstrap Modal ile\n    function showEditModal(initialText = '') {\n    return new Promise((resolve) => {\n    const modalEl = document.getElementById('editModal');\n    const input = document.getElementById('editInput');\n    const saveBtn = document.getElementById('editSaveBtn');\n    \n    let resolved = false;\n    const modal = bootstrap.Modal.getOrCreateInstance(modalEl, { backdrop: 'static' });\n    \n    // ilk değer + odak\n    input.value = initialText || '';\n    setTimeout(() => { input.focus(); input.select(); }, 50);\n    \n    const handleSave = () => {\n    if (resolved) return;\n    resolved = true;\n    const v = input.value.trim();\n    modal.hide();\n    resolve(v || null);\n    };\n    \n    const handleHidden = () => {\n    if (resolved) return; // X/İptal\n    resolved = true;\n    resolve(null);\n    };\n    \n    const handleEnter = (e) => {\n    if (e.key === 'Enter') { e.preventDefault(); handleSave(); }\n    };\n    \n    // tek seferlik dinleyiciler\n    saveBtn.addEventListener('click', handleSave, { once: true });\n    modalEl.addEventListener('hidden.bs.modal', handleHidden, { once: true });\n    input.addEventListener('keydown', handleEnter, { once: true });\n    \n    modal.show();\n    });\n    }\n    \n    // EDIT: satır başlığını al, modal ile güncelle\n    async function edit(id){\n    // satırdaki mevcut metni al (başlık yok ise boş ver)\n    const tr = bodyEl.querySelector(`tr[data-id=\"${id}\"]`);\n    const current = tr?.querySelector('td')?.textContent?.trim();\n    const initial = (current && current !== 'başlık yok') ? current : '';\n    \n    const nv = await showEditModal(initial);\n    if (nv) {\n    const res = await fetch(`${api}/${id}`, {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ title: nv })\n    });\n    if (res.ok) await load();\n    }\n    }\n  \n    // Üst butonlar\n    $('#btnAdd').onclick = ()=> add($('#newTitle').value);\n    $('#newTitle').addEventListener('keydown',e=>{\n      if(e.key==='Enter'){ e.preventDefault(); add($('#newTitle').value); }\n    });\n    $('#btnClear').onclick = ()=>{\n      $('#newTitle').value = '';\n      $('#newTitle').focus();\n    };\n  \n    // Satır butonları (delegation)\n    bodyEl.addEventListener('click', async (e)=>{\n      const btn=e.target.closest('button'); if(!btn) return;\n      const tr=e.target.closest('tr'); const id=tr?.dataset.id; const act=btn.dataset.act;\n      bootstrap.Tooltip.getInstance(btn)?.hide();\n      btn.blur();\n      if(!id||!act) return;\n  \n      if(act==='del')   await del(id);\n      if(act==='done')  await toggle(id,true);\n      if(act==='open')  await toggle(id,false);\n      if(act==='edit')  await edit(id);\n      if(act==='remind'){\n        const m=parseInt(prompt('Kaç dakika sonra hatırlatayım?','10'),10);\n        if(!isNaN(m)&&m>0){ setTimeout(()=>alert('⏰ Hatırlatıcı'), m*60*1000); btn.textContent='Ayarlı'; btn.disabled=true; }\n      }\n    });\n  \n    load();\n  </script>\n</body>\n</html>\n","output":"str","x":260,"y":100,"wires":[["fc64863bb139683c"]]},{"id":"hget","type":"http in","z":"tab1","name":"GET /todos","url":"/todos","method":"get","upload":false,"swaggerDoc":"","x":120,"y":80,"wires":[["fn_get"]]},{"id":"fn_get","type":"function","z":"tab1","name":"list","func":"let todos = flow.get('todos') || [];\nmsg.payload = todos;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":80,"wires":[["resp_json"]]},{"id":"resp_json","type":"http response","z":"tab1","name":"json","statusCode":"","headers":{"Content-Type":"application/json"},"x":540,"y":80,"wires":[]},{"id":"hpost","type":"http in","z":"tab1","name":"POST /todos","url":"/todos","method":"post","upload":false,"swaggerDoc":"","x":120,"y":140,"wires":[["json_post"]]},{"id":"json_post","type":"json","z":"tab1","name":"parse json","property":"payload","action":"","pretty":false,"x":330,"y":140,"wires":[["fn_post"]]},{"id":"fn_post","type":"function","z":"tab1","name":"create","func":"// Sağlam POST: hem JSON hem form verisini destekler, farklı alan adlarını toplar\nlet todos = flow.get('todos') || [];\n\n// Gövdeyi yakala ve gerekiyorsa JSON parse et\nlet b = msg.payload;\nif (typeof b === 'string') {\n  try { b = JSON.parse(b); } catch (e) { b = {}; }\n}\nb = b || {};\n\n// Olası alan adları: title, text, name, task, value, (query param)\nconst title =\n  [b.title, b.text, b.name, b.task, b.value,\n   msg?.req?.query?.title].find(v => typeof v === 'string' && v.trim()) || '';\n\nconst id = Date.now().toString(36) + Math.random().toString(36).slice(2, 6);\nconst now = new Date().toISOString();\n\nconst item = {\n  _id: id,\n  title: title,\n  description: (b.description || '').toString(),\n  categories: Array.isArray(b.categories) ? b.categories\n             : (b.categories ? [b.categories] : []),\n  dueAt: b.dueAt || null,\n  completed: !!b.completed,\n  createdAt: now,\n  updatedAt: now\n};\n\ntodos.unshift(item);\nflow.set('todos', todos);\n\nmsg.statusCode = 201;\nmsg.payload = item;\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":540,"y":140,"wires":[["resp_json"]]},{"id":"hput","type":"http in","z":"tab1","name":"PUT /todos/:id","url":"/todos/:id","method":"put","upload":false,"swaggerDoc":"","x":130,"y":200,"wires":[["json_put"]]},{"id":"json_put","type":"json","z":"tab1","name":"parse json","property":"payload","action":"","pretty":false,"x":330,"y":200,"wires":[["fn_put"]]},{"id":"fn_put","type":"function","z":"tab1","name":"update","func":"// /todos/:id  → güncelle\nlet todos = flow.get('todos') || [];\nconst id = msg.req.params.id;\n\n// Gövdeyi güvenle al (JSON ya da string olabilir)\nlet b = msg.payload;\nif (typeof b === 'string') { try { b = JSON.parse(b); } catch { b = {}; } }\nb = b || {};\n\nconst i = todos.findIndex(t => t._id === id);\nif (i === -1) { \n  msg.statusCode = 404; \n  msg.payload = { error: 'not found' }; \n  return msg; \n}\n\n// Tür dönüştürücü\nconst toBool = v => (v === true || v === 'true' || v === 1 || v === '1');\n\n// Sadece gönderilen alanları yamala\nconst patch = {};\nif (Object.prototype.hasOwnProperty.call(b, 'title') && typeof b.title === 'string') {\n  patch.title = b.title;\n}\nif (Object.prototype.hasOwnProperty.call(b, 'completed')) {\n  patch.completed = toBool(b.completed);\n}\n\ntodos[i] = { ...todos[i], ...patch, updatedAt: new Date().toISOString() };\nflow.set('todos', todos);\n\nmsg.payload = todos[i];\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":540,"y":200,"wires":[["resp_json"]]},{"id":"hdel","type":"http in","z":"tab1","name":"DELETE /todos/:id","url":"/todos/:id","method":"delete","upload":false,"swaggerDoc":"","x":140,"y":260,"wires":[["fn_del"]]},{"id":"fn_del","type":"function","z":"tab1","name":"remove","func":"let todos = flow.get('todos') || [];\nconst id = msg.req.params.id;\nconst i = todos.findIndex(t=>t._id===id);\nif(i===-1){msg.statusCode=404;msg.payload={error:'not found'};return msg;}\ntodos.splice(i,1);\nflow.set('todos', todos);\nmsg.statusCode=204;\nmsg.payload='';\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":540,"y":260,"wires":[["resp_empty"]]},{"id":"resp_empty","type":"http response","z":"tab1","name":"empty 204","statusCode":"","headers":{},"x":740,"y":260,"wires":[]},{"id":"httpInFav","type":"http in","z":"tabFav","name":"GET /favicon.ico","url":"/favicon.ico","method":"get","upload":false,"swaggerDoc":"","x":150,"y":80,"wires":[["fn204"]]},{"id":"fn204","type":"function","z":"tabFav","name":"204 no content","func":"msg.statusCode=204;\nmsg.payload='';\nmsg.headers={'Cache-Control':'public, max-age=86400'};\nreturn msg;","outputs":1,"noerr":0,"x":360,"y":80,"wires":[["httpRespFav"]]},{"id":"httpRespFav","type":"http response","z":"tabFav","name":"res","statusCode":"","headers":{},"x":550,"y":80,"wires":[]}]